/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as HomeRouteImport } from './routes/_home'
import { Route as HomeIndexRouteImport } from './routes/_home/index'
import { Route as HomeCollectionIndexRouteImport } from './routes/_home/collection/index'
import { Route as HomeAboutIndexRouteImport } from './routes/_home/about/index'
import { Route as HomeArtIdIndexRouteImport } from './routes/_home/art/$id/index'

const HomeRoute = HomeRouteImport.update({
  id: '/_home',
  getParentRoute: () => rootRouteImport,
} as any)
const HomeIndexRoute = HomeIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => HomeRoute,
} as any)
const HomeCollectionIndexRoute = HomeCollectionIndexRouteImport.update({
  id: '/collection/',
  path: '/collection/',
  getParentRoute: () => HomeRoute,
} as any)
const HomeAboutIndexRoute = HomeAboutIndexRouteImport.update({
  id: '/about/',
  path: '/about/',
  getParentRoute: () => HomeRoute,
} as any)
const HomeArtIdIndexRoute = HomeArtIdIndexRouteImport.update({
  id: '/art/$id/',
  path: '/art/$id/',
  getParentRoute: () => HomeRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof HomeIndexRoute
  '/about': typeof HomeAboutIndexRoute
  '/collection': typeof HomeCollectionIndexRoute
  '/art/$id': typeof HomeArtIdIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof HomeIndexRoute
  '/about': typeof HomeAboutIndexRoute
  '/collection': typeof HomeCollectionIndexRoute
  '/art/$id': typeof HomeArtIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_home': typeof HomeRouteWithChildren
  '/_home/': typeof HomeIndexRoute
  '/_home/about/': typeof HomeAboutIndexRoute
  '/_home/collection/': typeof HomeCollectionIndexRoute
  '/_home/art/$id/': typeof HomeArtIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/about' | '/collection' | '/art/$id'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/collection' | '/art/$id'
  id:
    | '__root__'
    | '/_home'
    | '/_home/'
    | '/_home/about/'
    | '/_home/collection/'
    | '/_home/art/$id/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  HomeRoute: typeof HomeRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_home': {
      id: '/_home'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof HomeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_home/': {
      id: '/_home/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof HomeIndexRouteImport
      parentRoute: typeof HomeRoute
    }
    '/_home/collection/': {
      id: '/_home/collection/'
      path: '/collection'
      fullPath: '/collection'
      preLoaderRoute: typeof HomeCollectionIndexRouteImport
      parentRoute: typeof HomeRoute
    }
    '/_home/about/': {
      id: '/_home/about/'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof HomeAboutIndexRouteImport
      parentRoute: typeof HomeRoute
    }
    '/_home/art/$id/': {
      id: '/_home/art/$id/'
      path: '/art/$id'
      fullPath: '/art/$id'
      preLoaderRoute: typeof HomeArtIdIndexRouteImport
      parentRoute: typeof HomeRoute
    }
  }
}

interface HomeRouteChildren {
  HomeIndexRoute: typeof HomeIndexRoute
  HomeAboutIndexRoute: typeof HomeAboutIndexRoute
  HomeCollectionIndexRoute: typeof HomeCollectionIndexRoute
  HomeArtIdIndexRoute: typeof HomeArtIdIndexRoute
}

const HomeRouteChildren: HomeRouteChildren = {
  HomeIndexRoute: HomeIndexRoute,
  HomeAboutIndexRoute: HomeAboutIndexRoute,
  HomeCollectionIndexRoute: HomeCollectionIndexRoute,
  HomeArtIdIndexRoute: HomeArtIdIndexRoute,
}

const HomeRouteWithChildren = HomeRoute._addFileChildren(HomeRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  HomeRoute: HomeRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { createStart } from '@tanstack/react-start'
declare module '@tanstack/react-start' {
  interface Register {
    ssr: true
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
